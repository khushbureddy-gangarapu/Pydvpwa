# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    branches: [ master ]
    
  pull_request:
    branches: [ master ]   
  
permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest    
     
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install atheris
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        
    - name: Build and push docker image
      uses: mr-smithers-excellent/docker-build-push@v4
      with:
        image: khushi2/oss-fuzz
        registry: docker.io
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
  
  
  Fuzzing:
     runs-on: ubuntu-latest
     concurrency:
      group: ${{ github.workflow }}-${{ matrix.sanitizer }}-${{ github.ref }}
      cancel-in-progress: true
     strategy:
        fail-fast: false
        matrix:
            sanitizer: [address]
     steps:
     - uses: actions/checkout@v3
     - name: Build Fuzzers (${{ matrix.sanitizer }})
       id: build
       uses: google/clusterfuzzlite/actions/build_fuzzers@v1
       with:
        github-token: ${{ secrets.TOKEN }}    
        language: python
        dry-run: false
        sanitizer: ${{ matrix.sanitizer }}
        upload-build: true
        keep-unaffected-fuzz-targets: true
     
        
     - name: Run Fuzzers (${{ matrix.sanitizer }})
       uses: google/clusterfuzzlite/actions/run_fuzzers@v1
       with:
        github-token: ${{ secrets.TOKEN }}
        language: python
        fuzz-seconds: 200
        mode: 'batch'
        dry-run: false
        report-unreproducible-crashes: true
        keep-unaffected-fuzz-targets: true
        sanitizer: ${{ matrix.sanitizer }}
        
        # See later section on "Git repo for storage".
        storage-repo: https://${{ secrets.TOKEN }}@github.com/khushbureddy-gangarapu/khushbureddy-gangarapu.github.io.git
        storage-repo-branch: master   # Optional. Defaults to "main"
        storage-repo-branch-coverage: master  # Optional. Defaults to "gh-pages".
        
  Pruning:
    runs-on: ubuntu-latest
    steps:
    
    - name: Build Fuzzers
      id: build
      uses: google/clusterfuzzlite/actions/build_fuzzers@v1
      with:
        language: python
        upload-build: true
        

    - name: Run Fuzzers
      id: run
      uses: google/clusterfuzzlite/actions/run_fuzzers@v1
      with:
        language: python
        github-token: ${{ secrets.TOKEN }}
        fuzz-seconds: 600
        mode: 'prune'
        # Optional but recommended.
        # See later section on "Git repo for storage".
        storage-repo: https://${{ secrets.TOKEN }}@github.com/khushbureddy-gangarapu/khushbureddy-gangarapu.github.io.git
        storage-repo-branch: master   # Optional. Defaults to "main"
        storage-repo-branch-coverage: master  # Optional. Defaults to "gh-pages".
  
  
  Coverage:
    runs-on: ubuntu-latest
   
    steps:
    - name: Build Fuzzers
      id: build
      uses: google/clusterfuzzlite/actions/build_fuzzers@v1
      with:
        sanitizer: coverage
        language: python
        
    - name: Run Fuzzers
      id: run
      uses: google/clusterfuzzlite/actions/run_fuzzers@v1
      with:
        github-token: ${{ secrets.TOKEN }}
        fuzz-seconds: 600
        mode: 'coverage'
        language: python
        sanitizer: 'coverage'
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v2
      with:
        codecov_Token: ${{secrets.CODECOV_TOKEN}}
        file: coverage.xml        
 
